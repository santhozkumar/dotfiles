## https://juliu.is/a-simple-tmux/
# start window indexing at one instead of zero
set -g base-index 1
set -g pane-base-index 1

set -g renumber-windows on

set -g history-limit 1000000
set -g mouse on

# Use emacs keybindings in the status line
set-option -g status-keys emacs

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Fix ESC delay in vim
set -g escape-time 10

bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# C-b is not acceptable as prefix -- Vim uses it
unbind C-b
set -g prefix  C-a
bind C-a send-prefix


# Easy bindings for split
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"


# New Sesssion and Window
bind C-c new-session
bind c new-window -c '#{pane_current_path}'
bind b break-pane -d


# Copy Mode
unbind-key -T copy-mode-vi v

bind-key -T copy-mode-vi v \
  send-keys -X begin-selection

bind-key -T copy-mode-vi 'C-v' \
  send-keys -X rectangle-toggle

bind-key -T copy-mode-vi y \
  send-keys -X copy-pipe "pbcopy"

bind-key -T copy-mode-vi MouseDragEnd1Pane \
  send-keys -X copy-pipe-and-cancel "pbcopy"

bind-key -T copy-mode-vi Escape \
  send-keys -X cancel 


# cool Status Bar 
# set-option -g status-justify left
# set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #S #[bg=colour236] '
# set-option -g status-left-length 20
# set-option -g status-bg colour237
# set-option -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185] %a %R #[bg=colour236]#[fg=colour3] #[bg=colour237] #[bg=colour72] #[]'
# set-option -g status-interval 60
#
# set-option -g pane-active-border-style fg=colour246
# set-option -g pane-border-style fg=colour238
#
# set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
# set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# Tmux Appearance -------------------- {{{
# https://github.com/dankrookie/tmux.conf/blob/minimal_tmux_config/.tmux.conf
set -g status-left " #S "
set -g status-left-length 20
set -g status-left-style fg=#eee8d5,bold,bg=#6700b5

set -g window-status-current-style fg=#eee8d5,bold,bg=#b58900
set -g window-status-current-format "#{?window_last_flag,`, }#{?window_zoomed_flag,[,}#I:#W#{?window_zoomed_flag,],}#{?window_last_flag,`, }"
set -g window-status-format "#{?window_last_flag,`, }#{?window_zoomed_flag,[,}#I:#W#{?window_zoomed_flag,],}#{?window_last_flag,`, }"

set -g status-style fg=colour241,bg=colour233
# #h hostshort , #S session , #W window , #T pane name
wg_prfx=" #[fg=colour231,bg=default]#{?client_prefix,<Prefix>,}"  # prefix indicator widget
wg_pane=" #[fg=colour202,bg=default]#{=26:pane_title}"
wg_date=" #[fg=colour231,bold,italics,bg=default]%d-%b-%Y#[none]"
wg_time=" #[fg=colour220,bold,bg=default]%H:%M"
set -g status-right "${wg_prfx}${wg_pane}${wg_date}${wg_time}"
# }}}



# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Window Navigation

# bind -r C-h previous-window # select previous window
bind h previous-window      # select previous window
bind l next-window          # select next window
bind Tab last-window        # move to last active window



# switch windows alt+number
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

